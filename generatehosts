#!/usr/bin/perl -I/usr/local/sauron
#
# generatehosts - utility to add host records
#
# Copyright (c) Timo Kokkonen <tjko@iki.fi>  2001-2004.
# $Id$
#
require 5;
use Getopt::Long;
# use Net::Netmask; # Not used for IPv6.
use Sauron::DB;
use Sauron::Util;
use Sauron::BackEnd;
use Sauron::Sauron;
use bignum; # For IPv6.

load_config();

#######################################################################

sub tag_expand($) {
  my($str) = @_;
  my($i1,$i2,$i3,$i4,$i_ip,$ip1,$ip2,$ip3,$ip4);

  return '' if ($str =~ /^\s*$/);

  if ($ip =~ /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/) {
    $ip1=sprintf("%03d",$1);
    $ip2=sprintf("%03d",$2);
    $ip3=sprintf("%03d",$3);
    $ip4=sprintf("%03d",$4);
    $str=~ s/:IP1:/$ip1/gi;
    $str=~ s/:IP2:/$ip2/gi;
    $str=~ s/:IP3:/$ip3/gi;
    $str=~ s/:IP4:/$ip4/gi;
  } else { # For IPv6.
      $i_ip = ipv6decompress(lc($ip));
      $str =~ s/:IP1:/substr($i_ip,  0, 4)/gei;
      $str =~ s/:IP2:/substr($i_ip,  5, 4)/gei;
      $str =~ s/:IP3:/substr($i_ip, 10, 4)/gei;
      $str =~ s/:IP4:/substr($i_ip, 15, 4)/gei;
      $str =~ s/:IP5:/substr($i_ip, 20, 4)/gei;
      $str =~ s/:IP6:/substr($i_ip, 25, 4)/gei;
      $str =~ s/:IP7:/substr($i_ip, 30, 4)/gei;
      $str =~ s/:IP8:/substr($i_ip, 35, 4)/gei;
  }

  $i1=$i+$seq_start;
  $i2=sprintf("%02d",$i1);
  $i3=sprintf("%03d",$i1);
  $i4=sprintf("%04d",$i1);
  $str =~ s/:N:/$i1/gi;
  $str =~ s/:N2:/$i2/gi;
  $str =~ s/:N3:/$i3/gi;
  $str =~ s/:N4:/$i4/gi;

  return $str;
}

######################################################################

$user = (getpwuid($<))[0];
set_muser($user);

GetOptions("help|h","name=s","commit","noreverse","seqstart=s",
	   "outofzone","verbose","group=s","info=s");

if ($opt_help || @ARGV < 5) {
  print "syntax: $0 <server> <zone> <hostname> <starting-IP> <count>\n\n",
        "options:\n",
	"\t--noreverse\t\tdo not add reverse records\n",
	"\t--outofzone\t\tallow out of zone records\n",
	"\t--verbose\t\tproduce more verbose output\n",
	"\t--seqstart=<n>\t\tstart sequence numbering from n\n",
	"\t--group=<name>\t\tassign new hosts to given group\n",
	"\t--info=<user>:<dept>:<location>:<extra>\n\n",
	"\t--commit\t\tcommit changes (w/o this no changes are made)\n",
	"\ntags:\n",
	"\t:IPn:\t\tfor IPv4, nth octet of current IP address; n = 1..4\n",
	"\t:IPn:\t\tfor IPv6, nth quartet of current IP address; n = 1..8\n",
	"\t:N:\t\tsequence number\n",
	"\t:Nn:\t\tn-digit sequence number, left padded with zeros; n = 2..4\n",
	"\n";
  print "" if ($opt_help);
  exit(0);
}

$opt_commit = ($opt_commit ? 1 : 0);
$opt_noreverse = ($opt_noreverse ? 1 : 0);

$server=$ARGV[0];
$zone=$ARGV[1];
$hostname=$ARGV[2];
$startip=$ARGV[3];
$count=$ARGV[4];
$gid=-1;
$seq_start=0;
$add_count=0;


db_connect();

if ($opt_seqstart) {
  $seq_start = $opt_seqstart;
  fatal("invalid parameter to 'seq-start'") unless ($seq_start =~ /^\d+$/);
}

$serverid=get_server_id($server);
fatal("cannot find server '$server'") unless ($serverid > 0);

$zoneid=get_zone_id($zone,$serverid);
fatal("cannot find zone '$zone'") unless ($zoneid > 0);

if ($opt_group) {
  fatal("cannot find group '$opt_group'") 
    if (($gid=get_group_by_name($serverid,$opt_group)) < 0);
}

if ($opt_info) {
  @infof = split(/:/,$opt_info);
  fatal("invalid paremeters for info option ") if (@infof > 4);
}

fatal("invalid 'count' parameter: $count") unless ($count > 0);
fatal("invalid 'hostname' parameter: '$hostname'") 
	  unless ($hostname =~ /^\S+$/);
fatal("invalid 'starting-IP' parameter: $startip") unless (is_cidr($startip));

$sip = ip2int($startip);
$eip = int($sip + $count -1);


$origin=$zone;
$origin.="." unless ($zone =~ /\.$/);

print "IP range: ".int2ip($sip)." - ".int2ip($eip)."\n" if ($opt_verbose);


db_begin();
db_ignore_begin_and_commit(1);

foreach $i (0..$count-1) {
  $ip=int2ip($sip+$i);
  $domain=tag_expand($hostname);
  $host=remove_origin($domain,$origin);
  print "$host : $ip\n";

  undef @q;
  db_query("SELECT id FROM hosts WHERE zone=$zoneid AND domain = '$host';",
	   \@q);
  if (($id=$q[0][0]) > 0) {
    fatal("host: $host already exists!");
  }

  undef %host;
  $host{domain}=$host;
  $host{type}=1;
  $host{zone}=$zoneid;
  $host{grp}=$gid;
  $host{ip}=[[0,$ip,'t',($opt_noreverse ? 'f' : 't')]];
  $host{huser}=tag_expand($infof[0]) if ($infof[0]);
  $host{dept}=tag_expand($infof[1]) if($infof[1]);
  $host{location}=tag_expand($infof[2]) if($infof[2]);
  $host{info}=tag_expand($infof[3]) if($infof[3]);

  $id=add_host(\%host);
  fatal("cannot insert host_record! $id") unless ($id > 0);
  $add_count++;
}



db_ignore_begin_and_commit(0);

print "$add_count host(s) added.\n" if ($opt_verbose);

if ($opt_commit) {
  fatal("cannot commit changes to database") if (db_commit() < 0);
} else {
  db_rollback();
  print "NO CHANGES MADE!\n";
}

exit;


# eof :-)

